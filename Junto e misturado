using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Bank
{
    class Program
    {
        static void Main(string[] args)
        {
            Cliente user_cliente = new Cliente();
            Conta user_conta = new Conta();
            String welcome = "Bem vindo ao Banco X\n\nO que deseja?\n1_Cadastrar\n2_Logar\n3_Sair\n";
            int escolha_cliente = 0;

            do
            {
                Console.WriteLine(welcome);
                escolha_cliente = Convert.ToInt32(Console.ReadLine());
                user_cliente.ProcessCliente(escolha_cliente);
            } while (escolha_cliente != 3);
        }
    }
}
    
    public class Conta
    {
        protected double saldo;
        public String msgerror = "\nERROR: limite sua escolha a umas das 4 opções";
        public String msgsaldo = "\nSaldo atual: R$ ";
        public String welcome = "Bem vindo ao Banco X\n\nO que deseja? 1_Cadastrar\n2_Logar";


        public Conta()
        {
            saldo = 0;
        }

        public Conta(double saldoInicial)
        {
            saldo = saldoInicial;
        }

        public virtual void Deposit(double valor)
        {
            this.saldo += valor;
        }

        public virtual void Saque(double valor)
        {
            if (valor <= 0)
            {
                throw new ContaException("Valor deve ser maior que");
            }

            else if (saldo - valor <= 0)
            {
                throw new ContaException("Saldo insuficiente");
            }

            this.saldo -= valor;
        }

        public virtual double ConsultaSaldo()
        {
            return saldo;
        }

        public virtual void ProcessConta(int escolha)
        {
            Conta user = new Conta();
            try
            {
                if (escolha == 1)
                {
                    Console.WriteLine("\nInsira o valor do depósito: R$ ");
                    double deposito1 = Convert.ToDouble(Console.ReadLine());
                    if (deposito1 < 0)
                    {
                        Console.WriteLine("\nNão possível fazer a transação. MOTIVO: valor do depósito menor que 0.");
                        return;
                    }
                    user.Deposit(deposito1);
                    Console.WriteLine(msgsaldo + user.ConsultaSaldo() + "\n----------------------");
                }

                else if (escolha == 2)
                {
                    Console.WriteLine("\nInsira o valor do saque: R$ ");
                    double saque1 = Convert.ToDouble(Console.ReadLine());
                    if (saque1 > saldo)
                    {
                        Console.WriteLine("\nNão possível fazer a transação. MOTIVO: valor do saque maior que seu saldo atual.");
                        return;
                    }
                    user.Saque(saque1);
                    Console.WriteLine(msgsaldo + user.ConsultaSaldo() + "\n----------------------");
                }

                else if (escolha == 3)
                {
                    Console.WriteLine(msgsaldo + saldo);
                }

                else if (escolha == 4)
                {
                    Console.WriteLine("\nAgradecemos sua visita");
                    return;
                }

                else
                {
                    Console.WriteLine(msgerror + welcome);
                }
            }
            catch (Exception)
            {

            }
        }
    }
}

    
    class Cliente : Conta
    {
        Conta user_conta = new Conta();
        private String Nome;
        private String CPF;
        private String Senha;
        private String escolhas = "[1] Depósito\n[2] Saque\n[3] Consulta saldo\n[4] Sair da conta";

        public Cliente()
        {
            Nome = null;
            CPF = null;
            Senha = null;
        }

        public Cliente(string nome, string cpf, string senha)
        {
            Nome = nome;
            CPF = cpf;
            Senha = senha;
        }

        public void ProcessCliente(int escolha)
        {
            string[] arquivo = File.ReadAllLines(@"C:\\Contas\\Dados.txt");
            if (escolha == 1)
            {
                StreamWriter e = new StreamWriter(@"C:\\Contas\\Dados.txt");
                Console.Write("\nInsira seu nome: ");
                Nome = Console.ReadLine();
                e.WriteLine(Nome);

                Console.Write("\nInsira seu CPF: ");
                CPF = Convert.ToString(Console.ReadLine());
                e.WriteLine(CPF);

                Console.Write("\nInsira seu senha: ");
                Senha = Convert.ToString(Console.ReadLine());
                e.WriteLine(Senha);
                e.Close();
                Console.WriteLine("\n------------------Registro realizado com sucesso---------------------\n");
            }

            else if (escolha == 2)
            {
                if (File.Exists(@"C:\\Contas\\Dados.txt"))
                {
                    try
                    {
                        using (StreamReader sr = new StreamReader(@"C:\\Contas\\Dados.txt"))
                        {
                            Console.Clear();
                            Console.Write("Nome: ");
                            String name = Convert.ToString(Console.ReadLine());

                            if (name == arquivo[0])
                            {
                                Console.Write("CPF: ");
                                String cpefi = Convert.ToString(Console.ReadLine());

                                if (cpefi == arquivo[1])
                                {
                                    Console.Write("Senha: ");
                                    String pass = Convert.ToString(Console.ReadLine());

                                    if (pass == arquivo[2])
                                    {
                                        Console.Clear();
                                        Console.WriteLine(escolhas);
                                        int escolha_procedimentos_conta = Convert.ToInt16(Console.ReadLine());
                                        user_conta.ProcessConta(escolha_procedimentos_conta);
                                    }
                                }
                            }

                            else
                            {
                                Console.WriteLine("ERROR: nome não cadastrado\n");
                            }
                        }
                    }

                    catch (Exception ex)
                    {
                        Console.WriteLine(ex.Message);
                    }
                }

                else
                {
                    Console.WriteLine(" O arquivo não foi localizado !");
                }
            }

            else if (escolha == 3)
            {
                Console.WriteLine("\nAgradecemos sua visita\n");
                return;
            }
        }

        public override void ProcessConta(int escolha)
        {
            Conta user = new Conta();
            try
            {
                if (escolha == 1)
                {
                    Console.WriteLine("\nInsira o valor do depósito: R$ ");
                    double deposito1 = Convert.ToDouble(Console.ReadLine());
                    if (deposito1 < 0)
                    {
                        Console.WriteLine("\nNão possível fazer a transação. MOTIVO: valor do depósito menor que 0.");
                        return;
                    }
                    user_conta.Deposit(deposito1);
                    Console.WriteLine(msgsaldo + user_conta.ConsultaSaldo() + "\n----------------------");
                }

                else if (escolha == 2)
                {
                    Console.WriteLine("\nInsira o valor do saque: R$ ");
                    double saque1 = Convert.ToDouble(Console.ReadLine());
                    if (saque1 > saldo)
                    {
                        Console.WriteLine("\nNão possível fazer a transação. MOTIVO: valor do saque maior que seu saldo atual.");
                        return;
                    }
                    user_conta.Saque(saque1);
                    Console.WriteLine(msgsaldo + user_conta.ConsultaSaldo() + "\n----------------------");
                }

                else if (escolha == 3)
                {
                    Console.WriteLine(msgsaldo + user_conta.ConsultaSaldo());
                }

                else if (escolha == 4)
                {
                    Console.WriteLine("\nAgradecemos sua visita");
                    return;
                }

                else
                {
                    Console.WriteLine(msgerror + welcome);
                }
            }
            catch (Exception)
            {

            }
        }
    }
}

[Serializable]
    public class ContaException : Exception
    {
        public ContaException() { }
        public ContaException(string message) : base(message) { }
        public ContaException(string message, Exception inner) : base(message, inner) { }
        protected ContaException(
          System.Runtime.Serialization.SerializationInfo info,
          System.Runtime.Serialization.StreamingContext context) : base(info, context) { }
    }
}
